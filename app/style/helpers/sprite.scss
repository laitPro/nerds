// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$cart-icon-name: 'cart-icon';
$cart-icon-x: 26px;
$cart-icon-y: 48px;
$cart-icon-offset-x: -26px;
$cart-icon-offset-y: -48px;
$cart-icon-width: 15px;
$cart-icon-height: 15px;
$cart-icon-total-width: 71px;
$cart-icon-total-height: 63px;
$cart-icon-image: '../imgs/decorate/sprite/sprite.png';
$cart-icon: (26px, 48px, -26px, -48px, 15px, 15px, 71px, 63px, '../imgs/decorate/sprite/sprite.png', 'cart-icon', );
$checkbox-off-name: 'checkbox-off';
$checkbox-off-x: 27px;
$checkbox-off-y: 25px;
$checkbox-off-offset-x: -27px;
$checkbox-off-offset-y: -25px;
$checkbox-off-width: 23px;
$checkbox-off-height: 23px;
$checkbox-off-total-width: 71px;
$checkbox-off-total-height: 63px;
$checkbox-off-image: '../imgs/decorate/sprite/sprite.png';
$checkbox-off: (27px, 25px, -27px, -25px, 23px, 23px, 71px, 63px, '../imgs/decorate/sprite/sprite.png', 'checkbox-off', );
$checkbox-on-name: 'checkbox-on';
$checkbox-on-x: 0px;
$checkbox-on-y: 25px;
$checkbox-on-offset-x: 0px;
$checkbox-on-offset-y: -25px;
$checkbox-on-width: 27px;
$checkbox-on-height: 23px;
$checkbox-on-total-width: 71px;
$checkbox-on-total-height: 63px;
$checkbox-on-image: '../imgs/decorate/sprite/sprite.png';
$checkbox-on: (0px, 25px, 0px, -25px, 27px, 23px, 71px, 63px, '../imgs/decorate/sprite/sprite.png', 'checkbox-on', );
$fb-icon-name: 'fb-icon';
$fb-icon-x: 50px;
$fb-icon-y: 21px;
$fb-icon-offset-x: -50px;
$fb-icon-offset-y: -21px;
$fb-icon-width: 12px;
$fb-icon-height: 22px;
$fb-icon-total-width: 71px;
$fb-icon-total-height: 63px;
$fb-icon-image: '../imgs/decorate/sprite/sprite.png';
$fb-icon: (50px, 21px, -50px, -21px, 12px, 22px, 71px, 63px, '../imgs/decorate/sprite/sprite.png', 'fb-icon', );
$insta-icon-name: 'insta-icon';
$insta-icon-x: 50px;
$insta-icon-y: 0px;
$insta-icon-offset-x: -50px;
$insta-icon-offset-y: 0px;
$insta-icon-width: 21px;
$insta-icon-height: 21px;
$insta-icon-total-width: 71px;
$insta-icon-total-height: 63px;
$insta-icon-image: '../imgs/decorate/sprite/sprite.png';
$insta-icon: (50px, 0px, -50px, 0px, 21px, 21px, 71px, 63px, '../imgs/decorate/sprite/sprite.png', 'insta-icon', );
$radio-off-name: 'radio-off';
$radio-off-x: 0px;
$radio-off-y: 0px;
$radio-off-offset-x: 0px;
$radio-off-offset-y: 0px;
$radio-off-width: 25px;
$radio-off-height: 25px;
$radio-off-total-width: 71px;
$radio-off-total-height: 63px;
$radio-off-image: '../imgs/decorate/sprite/sprite.png';
$radio-off: (0px, 0px, 0px, 0px, 25px, 25px, 71px, 63px, '../imgs/decorate/sprite/sprite.png', 'radio-off', );
$radio-on-name: 'radio-on';
$radio-on-x: 25px;
$radio-on-y: 0px;
$radio-on-offset-x: -25px;
$radio-on-offset-y: 0px;
$radio-on-width: 25px;
$radio-on-height: 25px;
$radio-on-total-width: 71px;
$radio-on-total-height: 63px;
$radio-on-image: '../imgs/decorate/sprite/sprite.png';
$radio-on: (25px, 0px, -25px, 0px, 25px, 25px, 71px, 63px, '../imgs/decorate/sprite/sprite.png', 'radio-on', );
$vk-icon-name: 'vk-icon';
$vk-icon-x: 0px;
$vk-icon-y: 48px;
$vk-icon-offset-x: 0px;
$vk-icon-offset-y: -48px;
$vk-icon-width: 26px;
$vk-icon-height: 15px;
$vk-icon-total-width: 71px;
$vk-icon-total-height: 63px;
$vk-icon-image: '../imgs/decorate/sprite/sprite.png';
$vk-icon: (0px, 48px, 0px, -48px, 26px, 15px, 71px, 63px, '../imgs/decorate/sprite/sprite.png', 'vk-icon', );
$spritesheet-width: 71px;
$spritesheet-height: 63px;
$spritesheet-image: '../imgs/decorate/sprite/sprite.png';
$spritesheet-sprites: ($cart-icon, $checkbox-off, $checkbox-on, $fb-icon, $insta-icon, $radio-off, $radio-on, $vk-icon, );
$spritesheet: (71px, 63px, '../imgs/decorate/sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
